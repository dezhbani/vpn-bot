name: Full Deployment Workflow

on:
  push:
    branches:
      - frontend-production # برنچ مخصوص دیپلوی

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Check Repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Install Node.js using nvm
      # - name: Install Node.js with nvm
      #   run: |
      #     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
      #     export NVM_DIR="$HOME/.nvm"
      #     [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
      #     nvm install 20.11.1
      #     nvm use 20.11.1
      #     nvm alias default 20.11.1
      - name: List directory contents
        run: ls /home/runner/work && ls /home/runner/work/vpn-bot/vpn-bot

      # 3. Build the React App
      - name: Build React App
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
          cd /home/runner/work/vpn-bot  # مسیر به دایرکتوری اصلی
          npm install
          npm run build


      # 4. Upload the Build Artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./build

      # 5. Setup SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 9011 -H 87.248.150.99 >> ~/.ssh/known_hosts

      # 6. Download Build Artifacts and Deploy
      - name: Deploy Build to Server
        run: |
          ssh -p 9011 -o StrictHostKeyChecking=no app@87.248.150.99 "
          mkdir -p /home/app/delta &&
          rm -rf /home/app/delta/build &&
          mkdir -p /home/app/delta/build
          "
          scp -P 9011 -r ./build/* app@87.248.150.99:/home/app/delta/build/

      # 7. Install pm2 Globally and Serve the Application
      - name: Serve Application with pm2
        run: |
          ssh -p 9011 -o StrictHostKeyChecking=no app@87.248.150.99 "
          export NVM_DIR=\"\$HOME/.nvm\" &&
          [ -s \"\$NVM_DIR/nvm.sh\" ] && \. \"\$NVM_DIR/nvm.sh\" &&
          npm install -g pm2 serve &&
          pm2 delete delta-app || true &&
          pm2 start serve --name delta-app -- -s /home/app/delta/build -l 3000
          "
